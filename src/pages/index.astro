---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';

const blogPosts = await getCollection('blog');
const latestPosts = blogPosts.filter((post) => post.data.published == true) // published が true を取得
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 4);
---

<!DOCTYPE html>
<html lang="ja">
<head>
  <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
</head>
<body>
  <Header />
  
  <main>
    <!-- Hero Section -->
    <section class="hero">
      <div class="hero-content">
        <h1 class="hero-title fade-in-up">Saikattyoの掃き溜め</h1>
        <p class="hero-description fade-in-up">
          ここは、Saikattyoが日常でふと思ったことをつらつらと書き留める場所です。
          技術のこと、日常のこと、そして心に浮かんだ想いを綴っています。
        </p>
        <div class="hero-cta fade-in-up">
          <a href="/blog" class="cta-button primary">
            <span>ブログを読む</span>
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M5 12h14M12 5l7 7-7 7"/>
            </svg>
          </a>
          <a href="/about" class="cta-button secondary">プロフィール</a>
        </div>
      </div>
      <div class="hero-visual">
        <div class="floating-cards">
          <div class="floating-card card-1"></div>
          <div class="floating-card card-2"></div>
          <div class="floating-card card-3"></div>
        </div>
      </div>
    </section>

    <!-- Latest Posts Section -->
    <section class="latest-posts">
      <div class="section-header">
        <h2 class="section-title">最近思ったことたち</h2>
        <p class="section-description">最新の投稿をお楽しみください</p>
      </div>
      
      <div class="posts-grid">
        {latestPosts.map((post, index) => (
          <article class="post-card fade-in-up" style={`animation-delay: ${index * 0.1}s`}>
            <a href={`/blog/${post.id}`} class="post-link">
              <div class="post-image">
                <img
                  src={post.data.heroImage || '/placeholder.png'}
                  alt={post.data.title}
                  loading="lazy"
                />
                <div class="post-overlay">
                  <span class="read-more">続きを読む</span>
                </div>
              </div>
              <div class="post-content">
                <h3 class="post-title">{post.data.title}</h3>
                <p class="post-excerpt">{post.data.description || '興味深い話題について書きました。'}</p>
                <div class="post-meta">
                  <FormattedDate date={post.data.pubDate} />
                  <span class="post-category">思考</span>
                </div>
              </div>
            </a>
          </article>
        ))}
      </div>
      
      <div class="section-footer">
        <a href="/blog" class="view-all-link">
          すべての投稿を見る
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M5 12h14M12 5l7 7-7 7"/>
          </svg>
        </a>
      </div>
    </section>

    <!-- Features Section -->
    <section class="features">
      <div class="section-header">
        <h2 class="section-title">このサイトについて</h2>
      </div>
      
      <div class="features-grid">
        <div class="feature-card">
          <div class="feature-icon">
            <svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/>
              <polyline points="14,2 14,8 20,8"/>
              <line x1="16" y1="13" x2="8" y2="13"/>
              <line x1="16" y1="17" x2="8" y2="17"/>
              <polyline points="10,9 9,9 8,9"/>
            </svg>
          </div>
          <h3>日常の記録</h3>
          <p>毎日の気づきや学び、体験したことを丁寧に記録しています。</p>
        </div>
        
        <div class="feature-card">
          <div class="feature-icon">
            <svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <polyline points="22,12 18,12 15,21 9,3 6,12 2,12"/>
            </svg>
          </div>
          <h3>技術の探求</h3>
          <p>新しい技術やツールについての実験と発見を共有しています。</p>
        </div>
        
        <div class="feature-card">
          <div class="feature-icon">
            <svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M9 11H5a2 2 0 0 0-2 2v7a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7a2 2 0 0 0-2-2h-4m-4-4v10m0 0l-3-3m3 3l3-3"/>
            </svg>
          </div>
          <h3>思考の整理</h3>
          <p>複雑な問題や概念について、自分なりの理解を整理して表現します。</p>
        </div>
      </div>
    </section>
  </main>
  
  <Footer />
</body>
</html>

<style>
  /* Hero Section */
  .hero {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    align-items: center;
    min-height: 80vh;
    padding: 4rem 0;
    position: relative;
  }

  .hero-content {
    max-width: 600px;
  }

  .hero-title {
    font-size: clamp(2.5rem, 5vw, 4rem);
    font-weight: 800;
    line-height: 1.1;
    margin-bottom: 2rem;
    background: var(--gradient-primary);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .hero-description {
    font-size: 1.25rem;
    line-height: 1.6;
    color: rgb(var(--secondary));
    margin-bottom: 3rem;
  }

  .hero-cta {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .cta-button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 1rem 2rem;
    border-radius: 12px;
    text-decoration: none;
    font-weight: 600;
    transition: var(--transition-normal);
    border: 2px solid transparent;
  }

  .cta-button.primary {
    background: var(--gradient-primary);
    color: white;
    box-shadow: var(--shadow-lg);
  }

  .cta-button.primary:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-xl);
  }

  .cta-button.secondary {
    background: transparent;
    color: var(--accent);
    border-color: var(--accent);
  }

  .cta-button.secondary:hover {
    background: var(--accent);
    color: white;
    transform: translateY(-2px);
  }

  .cta-button::after {
    display: none;
  }

  /* Hero Visual */
  .hero-visual {
    position: relative;
    height: 500px;
  }

  .floating-cards {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .floating-card {
    position: absolute;
    background: var(--gradient-primary);
    border-radius: 20px;
    box-shadow: var(--shadow-xl);
    animation: float 6s ease-in-out infinite;
  }

  .floating-card.card-1 {
    width: 200px;
    height: 120px;
    top: 10%;
    left: 10%;
    animation-delay: 0s;
  }

  .floating-card.card-2 {
    width: 150px;
    height: 150px;
    top: 40%;
    right: 20%;
    animation-delay: 2s;
  }

  .floating-card.card-3 {
    width: 180px;
    height: 100px;
    bottom: 20%;
    left: 30%;
    animation-delay: 4s;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    50% { transform: translateY(-20px) rotate(2deg); }
  }

  /* Latest Posts Section */
  .latest-posts {
    padding: 6rem 0;
  }

  .section-header {
    text-align: center;
    margin-bottom: 4rem;
  }

  .section-title {
    font-size: clamp(2rem, 4vw, 3rem);
    margin-bottom: 1rem;
    background: var(--gradient-primary);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .section-description {
    font-size: 1.125rem;
    color: rgb(var(--secondary));
    max-width: 600px;
    margin: 0 auto;
  }

  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
    margin-bottom: 3rem;
  }

  .post-card {
    background: rgba(var(--white), 0.9);
    backdrop-filter: blur(10px);
    border-radius: 20px;
    overflow: hidden;
    box-shadow: var(--shadow-md);
    transition: var(--transition-normal);
    border: 1px solid rgba(var(--white), 0.2);
  }

  .post-card:hover {
    transform: translateY(-8px);
    box-shadow: var(--shadow-xl);
  }

  .post-link {
    display: block;
    text-decoration: none;
    color: inherit;
  }

  .post-link::after {
    display: none;
  }

  .post-image {
    position: relative;
    height: 200px;
    overflow: hidden;
  }

  .post-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: var(--transition-normal);
    border-radius: 0;
  }

  .post-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(var(--accent), 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: var(--transition-normal);
  }

  .read-more {
    color: white;
    font-weight: 600;
    font-size: 1.1rem;
  }

  .post-card:hover .post-overlay {
    opacity: 1;
  }

  .post-card:hover .post-image img {
    transform: scale(1.1);
  }

  .post-content {
    padding: 2rem;
  }

  .post-title {
    font-size: 1.5rem;
    font-weight: 700;
    margin-bottom: 1rem;
    color: rgb(var(--primary));
    line-height: 1.3;
  }

  .post-excerpt {
    color: rgb(var(--secondary));
    margin-bottom: 1.5rem;
    line-height: 1.6;
  }

  .post-meta {
    display: flex;
    align-items: center;
    justify-content: space-between;
    font-size: 0.9rem;
    color: rgb(var(--gray));
  }

  .post-category {
    background: rgba(var(--accent), 0.1);
    color: var(--accent);
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-weight: 500;
  }

  .section-footer {
    text-align: center;
  }

  .view-all-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 1rem 2rem;
    background: rgba(var(--accent), 0.1);
    color: var(--accent);
    text-decoration: none;
    border-radius: 12px;
    font-weight: 600;
    transition: var(--transition-normal);
    border: 1px solid rgba(var(--accent), 0.2);
  }

  .view-all-link:hover {
    background: var(--accent);
    color: white;
    transform: translateY(-2px);
  }

  .view-all-link::after {
    display: none;
  }

  /* Features Section */
  .features {
    padding: 6rem 0;
    background: rgba(var(--white), 0.5);
    backdrop-filter: blur(10px);
  }

  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
  }

  .feature-card {
    text-align: center;
    padding: 3rem 2rem;
    background: rgba(var(--white), 0.9);
    backdrop-filter: blur(10px);
    border-radius: 20px;
    box-shadow: var(--shadow-md);
    transition: var(--transition-normal);
    border: 1px solid rgba(var(--white), 0.2);
  }

  .feature-card:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-lg);
  }

  .feature-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 80px;
    height: 80px;
    background: var(--gradient-primary);
    border-radius: 20px;
    margin-bottom: 2rem;
    color: white;
  }

  .feature-card h3 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: rgb(var(--primary));
  }

  .feature-card p {
    color: rgb(var(--secondary));
    line-height: 1.6;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .hero {
      grid-template-columns: 1fr;
      gap: 2rem;
      text-align: center;
      min-height: 60vh;
    }

    .hero-visual {
      height: 300px;
    }

    .posts-grid {
      grid-template-columns: 1fr;
    }

    .hero-cta {
      justify-content: center;
    }

    .cta-button {
      padding: 0.875rem 1.5rem;
    }

    .floating-card.card-1 {
      width: 150px;
      height: 90px;
    }

    .floating-card.card-2 {
      width: 120px;
      height: 120px;
    }

    .floating-card.card-3 {
      width: 140px;
      height: 80px;
    }
  }

  @media (max-width: 480px) {
    .hero {
      padding: 2rem 0;
    }

    .latest-posts,
    .features {
      padding: 3rem 0;
    }

    .post-content {
      padding: 1.5rem;
    }

    .feature-card {
      padding: 2rem 1.5rem;
    }
  }
</style>
